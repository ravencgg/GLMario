{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"view",
				"viewport_size"
			],
			[
				"tile_",
				"tile_height"
			],
			[
				"pixels",
				"pixels_to_meters"
			],
			[
				"get",
				"get_resolution"
			],
			[
				"cached",
				"cached_projection_mat"
			],
			[
				"draw",
				"draw_sprite"
			],
			[
				"GameObejc",
				"GameObjectNode"
			],
			[
				"render",
				"render_draw_buffer"
			],
			[
				"image",
				"image_file"
			],
			[
				"COUNT",
				"SHADER_COUNT"
			],
			[
				"SDLK",
				"SDLK_z"
			],
			[
				"D",
				"DOWN_UP"
			],
			[
				"F",
				"FRAME_UP"
			],
			[
				"mouse_lo",
				"mouse_loc_updated_this_frame"
			],
			[
				"FRAME_",
				"FRAME_UP"
			],
			[
				"OPEN",
				"OPENGL_ENABLED"
			],
			[
				"mem",
				"memory_size"
			],
			[
				"test_memory",
				"test_memory_power"
			],
			[
				"page",
				"page_table_entry"
			],
			[
				"al",
				"AlgorithmType"
			],
			[
				"Page",
				"PageTable"
			],
			[
				"is",
				"is_dirty"
			],
			[
				"lur",
				"lru_queue"
			],
			[
				"accesse",
				"accessed_memory_counter"
			],
			[
				"is_",
				"is_power_of_two"
			],
			[
				"Paget",
				"PageTableEntry"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/C/Projects/GLMario/glmario/source/main.cpp",
			"settings":
			{
				"buffer_size": 2058,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Projects/GLMario/glmario/source/renderer.cpp",
			"settings":
			{
				"buffer_size": 9616,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Projects/GLMario/glmario/source/player.cpp",
			"settings":
			{
				"buffer_size": 1916,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Projects/GLMario/glmario/source/tilemap.cpp",
			"settings":
			{
				"buffer_size": 1455,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Projects/GLMario/res/default_vert.glsl",
			"settings":
			{
				"buffer_size": 350,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Projects/GLMario/glmario/source/camera.cpp",
			"settings":
			{
				"buffer_size": 1023,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Projects/GLMario/glmario/source/renderer.h",
			"settings":
			{
				"buffer_size": 2658,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "#include \"mathops.h\"\n\n\n/*************************************************\n*\n*  Vector2 Implementation\n*\n*************************************************/\n\nVector2::Vector2(float x, float y)\n	:x(x),\n	y(y){}\n\nvoid Vector2::operator=(const Vector2 &rhs)\n{\n	this->x = rhs.x;\n	this->y = rhs.y;\n}\n\nconst Vector2 Vector2::operator+(const Vector2 &rhs) const\n{\n	Vector2 result;\n	result.x = this->x + rhs.x;\n	result.y = this->y + rhs.y;\n	return(result);\n}\n\nvoid Vector2::operator+=(const Vector2 &rhs)\n{\n	this->x += rhs.x;\n	this->y += rhs.y;\n}\n\nconst Vector2 Vector2::operator-(const Vector2 &rhs) const\n{\n	Vector2 result;\n	result.x = this->x - rhs.x;\n	result.y = this->y - rhs.y;\n	return result;\n}\n\nvoid Vector2::operator-=(const Vector2 &rhs)\n{\n	this->x -= rhs.x;\n	this->y -= rhs.y;\n}\n\nconst Vector2 Vector2::operator*(const float &rhs)\n{\n	Vector2 result;\n	result.x = this->x * rhs;\n	result.y = this->y * rhs;\n	return result;\n}\n\nvoid Vector2::operator*=(const float &rhs)\n{\n	this->x *= rhs;\n	this->y *= rhs;\n}\n\nfloat Vector2::dot(const Vector2& rhs) const\n{\n	float result = this->x * rhs.x + this->y * rhs.y;\n	return result;\n}\n\nvoid Vector2::normalize()\n{\n	float length = this->get_length();\n	this->x /= length;\n	this->y /= length;\n}\n\n// removed static\nVector2 Vector2::normalized(const Vector2 &rhs)\n{\n	Vector2 result;\n	float length = rhs.get_length();\n	result.x = rhs.x / length;\n	result.y = rhs.y / length;\n	return result;\n}\n\nfloat Vector2::get_length() const\n{\n	float result = sqrt(this->x * this->x + this->y * this->y);\n	return result;\n}\n\nstd::string Vector2::to_string()\n{\n	std::string x_str = std::to_string(this->x);\n	std::string y_str = std::to_string(this->y);\n	std::string result = \"(\" + x_str + \", \" + y_str + \")\";\n	return result;\n}\n\n\n/*************************************************\n *\n *  Vector3 Implementation\n *\n *************************************************/\n\n\nVector3::Vector3(float x, float y, float z)\n	: x(x),\n	  y(y),\n	  z(z){}\n\nVector3::Vector3(Vector2 xy, float z)\n	: x(xy.x),\n	  y(xy.y),\n	  z(z){}\n\nVector2 Vector3::xy()\n{\n	return Vector2(this->x, this->y);\n}\n\nvoid Vector3::operator=(const Vector3 &rhs)\n{\n	this->x = rhs.x;\n	this->y = rhs.y;\n	this->z = rhs.z;\n}\n\nconst Vector3 Vector3::operator+(const Vector3 &rhs) const\n{\n	Vector3 result;\n	result.x = this->x + rhs.x;\n	result.y = this->y + rhs.y;\n	result.z = this->z + rhs.z;\n	return(result);\n}\n\nvoid Vector3::operator+=(const Vector3 &rhs)\n{\n	this->x += rhs.x;\n	this->y += rhs.y;\n	this->z += rhs.z;\n}\n\nconst Vector3 Vector3::operator-(const Vector3 &rhs) const\n{\n	Vector3 result;\n	result.x = this->x - rhs.x;\n	result.y = this->y - rhs.y;\n	result.z = this->z - rhs.z;\n	return result;\n}\n\nvoid Vector3::operator-=(const Vector3 &rhs)\n{\n	this->x -= rhs.x;\n	this->y -= rhs.y;\n	this->z -= rhs.z;\n}\n\nconst Vector3 Vector3::operator*(const float &rhs)\n{\n	Vector3 result;\n	result.x = this->x * rhs;\n	result.y = this->y * rhs;\n	result.z = this->z * rhs;\n	return result;\n}\n\nvoid Vector3::operator*=(const float &rhs)\n{\n	this->x *= rhs;\n	this->y *= rhs;\n	this->z *= rhs;\n}\n\nfloat Vector3::dot(const Vector3& rhs) const\n{\n	float result = this->x * rhs.x + this->y * rhs.y + this->z * rhs.z;\n	return result;\n}\n\nvoid Vector3::normalize()\n{\n	float length = this->get_length();\n	this->x /= length;\n	this->y /= length;\n	this->z /= length;\n}\n\n//removed static\nVector3 Vector3::normalized(const Vector3 &rhs)\n{\n	Vector3 result;\n	float length = rhs.get_length();\n	result.x = rhs.x / length;\n	result.y = rhs.y / length;\n	result.z = rhs.z / length;\n	return result;\n}\n\nfloat Vector3::get_length() const\n{\n	float result = sqrt(this->x * this->x + this->y * this->y + this->z * this->z);\n	return result;\n}\n\nstd::string Vector3::to_string()\n{\n	std::string x_str = std::to_string(this->x);\n	std::string y_str = std::to_string(this->y);\n	std::string z_str = std::to_string(this->z);\n	std::string result = \"(\" + x_str + \", \" + y_str + \", \" + z_str + \")\";\n	return result;\n}\n\n\n/*************************************************\n*\n*  Vector4 Implementation\n*\n*************************************************/\n\n\nVector4::Vector4(float x, float y, float z, float w)\n	: x(x),\n	y(y),\n	z(z),\n	w(w){}\n\nVector4::Vector4(Vector3 xyz, float w = 0)\n	: x(xyz.x),\n	y(xyz.y),\n	z(xyz.z),\n	w(w){}\n\nVector3 Vector4::xyz()\n{\n	return Vector3(this->x, this->y, this->z);\n}\n\nvoid Vector4::operator=(const Vector4 &rhs)\n{\n	this->x = rhs.x;\n	this->y = rhs.y;\n	this->z = rhs.z;\n	this->w = rhs.w;\n}\n\nconst Vector4 Vector4::operator+(const Vector4 &rhs) const\n{\n	Vector4 result;\n	result.x = this->x + rhs.x;\n	result.y = this->y + rhs.y;\n	result.z = this->z + rhs.z;\n	result.w = this->w + rhs.w;\n	return(result);\n}\n\nvoid Vector4::operator+=(const Vector4 &rhs)\n{\n	this->x += rhs.x;\n	this->y += rhs.y;\n	this->z += rhs.z;\n	this->w += rhs.w;\n}\n\nconst Vector4 Vector4::operator-(const Vector4 &rhs) const\n{\n	Vector4 result;\n	result.x = this->x - rhs.x;\n	result.y = this->y - rhs.y;\n	result.z = this->z - rhs.z;\n	result.w = this->w - rhs.w;\n	return result;\n}\n\nvoid Vector4::operator-=(const Vector4 &rhs)\n{\n	this->x -= rhs.x;\n	this->y -= rhs.y;\n	this->z -= rhs.z;\n	this->w -= rhs.w;\n}\n\nconst Vector4 Vector4::operator*(const float &rhs)\n{\n	Vector4 result;\n	result.x = this->x * rhs;\n	result.y = this->y * rhs;\n	result.z = this->z * rhs;\n	result.w = this->w * rhs;\n	return result;\n}\n\nvoid Vector4::operator*=(const float &rhs)\n{\n	this->x *= rhs;\n	this->y *= rhs;\n	this->z *= rhs;\n	this->w *= rhs;\n}\n\nfloat Vector4::dot(const Vector4& rhs) const\n{\n	float result = this->x * rhs.x + this->y * rhs.y + this->z * rhs.z + this->w * rhs.w;\n	return result;\n}\n\nVector3 Vector3::cross_product(const Vector3 &rhs) const\n{\n	Vector3 result;\n\n	result.x = this->y * rhs.z - this->z * rhs.y;\n	result.y = this->z * rhs.x - this->x * rhs.z;\n	result.z = this->x * rhs.y - this->y * rhs.x;\n\n	result.x = -result.x;\n	result.y = -result.y;\n	result.z = -result.z;\n\n	return result;\n}\n\nvoid Vector4::normalize()\n{\n	float length = this->get_length();\n	this->x /= length;\n	this->y /= length;\n	this->z /= length;\n	this->w /= length;\n}\n\n//removed static\nVector4 Vector4::normalized(const Vector4 &rhs)\n{\n	Vector4 result;\n	float length = rhs.get_length();\n	result.x = rhs.x / length;\n	result.y = rhs.y / length;\n	result.z = rhs.z / length;\n	result.w = rhs.w / length;\n	return result;\n}\n\nfloat Vector4::get_length() const\n{\n	float result = sqrt(this->x * this->x + this->y * this->y + this->z * this->z + this->w * this->w);\n	return result;\n}\n\nstd::string Vector4::to_string()\n{\n	std::string x_str = std::to_string(this->x);\n	std::string y_str = std::to_string(this->y);\n	std::string z_str = std::to_string(this->z);\n	std::string w_str = std::to_string(this->w);\n	std::string result = \"(\" + x_str + \", \" + y_str + \", \" + z_str + \", \" + z_str + \")\";\n	return result;\n}\n\n\n/*************************************************\n*\n*  Mat4 Implementation\n*\n*************************************************/\n\n\nMat4 operator * (const Mat4& a, const Mat4& b) {\n	\n	// Extract columns from the second matrix;\n	Vector4 c[4];\n	c[0] = Vector4(b.e[0].x, b.e[1].x, b.e[2].x, b.e[3].x);\n	c[1] = Vector4(b.e[0].y, b.e[1].y, b.e[2].y, b.e[3].y);\n	c[2] = Vector4(b.e[0].z, b.e[1].z, b.e[2].z, b.e[3].z);\n	c[3] = Vector4(b.e[0].w, b.e[1].w, b.e[2].w, b.e[3].w);\n\n	Mat4 result;\n	result.e[0] = Vector4(a.e[0].dot(c[0]), a.e[0].dot(c[1]), a.e[0].dot(c[2]), a.e[0].dot(c[3]));\n	result.e[1] = Vector4(a.e[1].dot(c[0]), a.e[1].dot(c[1]), a.e[1].dot(c[2]), a.e[1].dot(c[3]));\n	result.e[2] = Vector4(a.e[2].dot(c[0]), a.e[2].dot(c[1]), a.e[2].dot(c[2]), a.e[2].dot(c[3]));\n	result.e[3] = Vector4(a.e[3].dot(c[0]), a.e[3].dot(c[1]), a.e[3].dot(c[2]), a.e[3].dot(c[3]));\n	\n	return result;\n}\n\nMat4 translation_matrix(Vector3 t)\n{\n	Mat4 result;\n\n	result.e[0] = Vector4(1.f, 0, 0, t.x);\n	result.e[1] = Vector4(0, 1.f, 0, t.y);\n	result.e[2] = Vector4(0, 0, 1.f, t.z);\n	result.e[3] = Vector4(0, 0, 0, 1.f);\n\n	return result;\n}\n\nMat4 scale_matrix(Vector3 scale)\n{\n	Mat4 result;\n\n	result.e[0] = Vector4(scale.x, 0, 0, 0);\n	result.e[1] = Vector4(0, scale.y, 0, 0);\n	result.e[2] = Vector4(0, 0, scale.z, 0);\n	result.e[3] = Vector4(0, 0, 0, 1.f);\n\n	return result;\n}\n\nMat4 rotation_matrix(Vector3 euler)\n{\n\n	Mat4 x_rot;\n	x_rot.e[0] = Vector4(1.f, 0, 0, 0);\n	x_rot.e[1] = Vector4(0, cos(euler.x), -sin(euler.x), 0);\n	x_rot.e[2] = Vector4(0, sin(euler.x), cos(euler.x), 0);\n	x_rot.e[3] = Vector4(0, 0, 0, 1.f);\n\n	Mat4 y_rot;\n	y_rot.e[0] = Vector4(cos(euler.y), 0, sin(euler.y), 0);\n	y_rot.e[1] = Vector4(0, 1.f, 0, 0);\n	y_rot.e[2] = Vector4(-sin(euler.y), 0, cos(euler.y), 0);\n	y_rot.e[3] = Vector4(0, 0, 0, 1.f);\n\n	Mat4 z_rot;\n	z_rot.e[0] = Vector4(cos(euler.z), -sin(euler.z), 0, 0);\n	z_rot.e[1] = Vector4(sin(euler.z), cos(euler.z), 0, 0);\n	z_rot.e[2] = Vector4(0, 0, 1.f, 0);\n	z_rot.e[3] = Vector4(0, 0, 0, 1.f);\n\n	Mat4 result = x_rot * y_rot * z_rot;\n\n	return result;\n}\n\nMat4 z_rotation_matrix(float angle)\n{\n	Mat4 result;\n\n	result.e[0] = Vector4(cos(angle), -sin(angle), 0, 0);\n	result.e[1] = Vector4(sin(angle), cos(angle), 0, 0);\n	result.e[2] = Vector4(0, 0, 1.f, 0);\n	result.e[3] = Vector4(0, 0, 0, 1.f);\n\n	return result;\n}\n\nMat4 orthographic_matrix(float w, float h, float n, float f, Vector2 center)\n{\n	float r = center.x + (w / 2);\n	float l = center.x - (w / 2);\n\n	float t = center.y + (h / 2);\n	float b = center.y - (h / 2);\n\n	float nr = n;\n	float far = f;\n\n	Mat4 result;\n\n	result.e[0] = Vector4((2.f * nr) / (r - l), 0, (r + l) / (r - l), 0);\n	result.e[1] = Vector4(0, (2.f * nr) / (t - b), (t + b) / (t - b), 0);\n	result.e[2] = Vector4(0, 0, (-far - nr) / (far - nr), (-2.f * far * nr) / (far - nr));\n	result.e[3] = Vector4(0, 0, -1.f, 0);\n\n	return result;\n}\n\n// TODO(chris): add in an aspect ratio version of this.\nMat4 perspective_matrix(float fov_x, float fov_y, float z_near, float z_far)\n{\n	Mat4 result = {};\n	// float aspect = 16.f/9.f;\n	fov_x *= DEG_2_RAD;\n	fov_y *= DEG_2_RAD;\n\n	result.e[0] = Vector4(atanf(fov_x / 2.f), 0, 0, 0);\n	result.e[1] = Vector4(0, atanf(fov_y / 2.f), 0, 0);\n	result.e[2] = Vector4(0, 0, - (z_far + z_near) / (z_far - z_near), - (2 * z_near * z_far) / (z_far - z_near));\n	result.e[3] = Vector4(0, 0, -1.f, 0);\n\n	// float tanHalfFovy = tan(fov_y / 2);\n\n	// //// tmat4x4<T, defaultp> Result(static_cast<T>(0));\n	// result.e[0].x = 1 / (aspect * tanHalfFovy);\n	// result.e[1].y = 1 / (tanHalfFovy);\n	// result.e[2].z = - (z_far + z_near) / (z_far - z_near);\n	// result.e[2].w = - 1;\n	// result.e[3].y = - ((2) * z_far * z_near) / (z_far - z_near);\n	// //return Result;\n\n	//TODO(chris): e[0] is not atanf, it is ar*tan;\n	//result.e[0] = Vector4(1.f / atanf(fov_x / 2.f), 0, 0, 0);\n	//result.e[1] = Vector4(0, 1 / tanf(fov_y / 2.f), 0, 0);\n	//result.e[2] = Vector4(0, 0, (-z_far - z_near) / (z_near - z_far), (2 * z_near * z_far) / (z_near - z_far));\n	//result.e[3] = Vector4(0, 0, 1.f, 0);\n\n	return result;\n}\n\nMat4 view_matrix(Vector3 right, Vector3 up, Vector3 look, Vector3 position)\n{\n	Mat4 result;\n\n	result.e[0] = Vector4(right.x, right.y, right.z, 0);\n	result.e[1] = Vector4(up.x, up.y, up.z, 0);\n	result.e[2] = Vector4(look.x, look.y, look.z, 0);\n	result.e[3] = Vector4(position.x, position.y, position.z, 1.f);\n\n	return result;\n}\n\nMat4 identity_matrix()\n{\n	Mat4 result;\n\n	result.e[0] = Vector4(1, 0, 0, 0);\n	result.e[1] = Vector4(0, 1, 0, 0);\n	result.e[2] = Vector4(0, 0, 1, 0);\n	result.e[3] = Vector4(0, 0, 0, 1);\n\n	return result;\n}\n\nMat4 mvp_matrix(Vector3 scale, Vector3 position, Vector3 euler, Mat4& perspective, Mat4& view)\n{\n	Mat4 result = perspective * view * translation_matrix(position) * scale_matrix(scale) * rotation_matrix(euler);\n	return result;\n}\n\nMat4 ortho_mvp_matrix(Vector3 scale, Vector3 position, float angle, Mat4& perspective, Mat4& view)\n{\n	Mat4 result = perspective * view * translation_matrix(position) * scale_matrix(scale) * z_rotation_matrix(angle);\n	return result;\n}\n",
			"file": "/C/Projects/GLMario/glmario/source/mathops.cpp",
			"file_size": 12324,
			"file_write_time": 130801185664790961,
			"settings":
			{
				"buffer_size": 11787,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/C/Projects/GLMario/glmario/source/camera.h",
			"settings":
			{
				"buffer_size": 520,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"MSVC",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"MSVC",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": ":w",
		"selected_items":
		[
			[
				":w",
				":w - Save"
			],
			[
				"Package Control: install package",
				"Package Control: Install Package"
			],
			[
				":W",
				":w - Save"
			],
			[
				"package control enable",
				"Package Control: Enable Package"
			],
			[
				"set syntax c++",
				"Set Syntax: C++"
			],
			[
				"syntac c++",
				"Set Syntax: Objective-C++"
			],
			[
				"snippet",
				"Snippet: #!/usr/bin/env"
			],
			[
				"package control list",
				"Package Control: List Packages"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"snippet ",
				"Snippet: Lorem ipsum"
			],
			[
				"msbuild",
				"Set Syntax: MSBuild"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"package control install",
				"Package Control: Install Package"
			],
			[
				"Package Control: List pa",
				"Package Control: List Packages"
			],
			[
				"snippe",
				"Snippet: main()"
			],
			[
				"",
				"Snippet: std::vector"
			],
			[
				"convert",
				"Convert Case: Lower Case"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 245.0,
		"history":
		[
			"pwd",
			"dir",
			"w:",
			"pyver",
			"version",
			"2**9",
			"2 ** 18",
			"2 ** 13",
			"2 ** 18",
			"2 ^ 18",
			"0.1 + 0.2",
			"2 + 2",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"print \"Hi, i am \" name",
			"name ",
			"print name",
			"print \"Hi, I am \"",
			"print \"Hi, I am \", name",
			"print \"Hi, I am \" + name",
			"name = \"Chris\"",
			"a + 5",
			"a = 2",
			"0.1+0.2",
			"2+2"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Projects/GLMario/GLMario/Dependencies/glm"
	],
	"file_history":
	[
		"/C/Projects/GLMario/glmario/source/camera.cpp",
		"/C/Users/Genova/AppData/Roaming/Sublime Text 3/Packages/User/HighlightBuildErrors.sublime-settings",
		"/C/Projects/GLMario/glmario/source/tilemap.cpp",
		"/C/Projects/GLMario/glmario/source/player.cpp",
		"/C/Projects/GLMario/Sublime/glmario.sublime-project",
		"/C/Users/Genova/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/C/Users/Genova/AppData/Roaming/Sublime Text 3/Packages/HighlightBuildErrors/HighlightBuildErrors.sublime-settings",
		"/C/Projects/GLMario/glmario/source/main.cpp",
		"/C/Projects/GLMario/glmario/source/camera.h",
		"/C/Projects/GLMario/glmario/source/renderer.h",
		"/C/Projects/GLMario/glmario/source/renderer.cpp",
		"/C/Projects/GLMario/glmario/source/scene_manager.cpp",
		"/C/Projects/GLMario/glmario/source/tilemap.h",
		"/C/Projects/GLMario/glmario/source/IDrawer.h",
		"/C/Projects/GLMario/glmario/source/scene_manager.h",
		"/C/Projects/GLMario/GLMario/source/tilemap.cpp",
		"/C/Projects/GLMario/glmario/source/window.h",
		"/C/Projects/GLMario/glmario/source/window.cpp",
		"/C/Projects/GLMario/GLMario/source/tilemap.h",
		"/C/Projects/GLMario/glmario/source/IWindowListener.cpp",
		"/C/Projects/GLMario/GLMario/source/IWindowListener",
		"/C/Projects/GLMario/glmario/source/helper.h",
		"/C/Projects/GLMario/glmario/source/mathops.cpp",
		"/C/Projects/GLMario/glmario/source/player.h",
		"/C/Projects/GLMario/glmario/source/input.cpp",
		"/C/Projects/GLMario/glmario/source/input.h",
		"/C/Projects/GLMario/glmario/source/mathops.h",
		"/C/Projects/GLMario/Sublime/build.bat",
		"/C/Projects/GLMario/res/default_frag.glsl",
		"/C/Projects/GLMario/res/default_vert.glsl",
		"/C/Projects/GLMario/.gitignore",
		"/C/Projects/GLMario/glmario/source/types.h",
		"/C/Projects/GLMario/GLMario/source/camera.cpp",
		"/C/Projects/GLMario/glmario/source/game_object.h",
		"/C/Projects/GLMario/glmario/source/dynamic_array.h",
		"/C/Projects/GLMario/glmario/source/helper.cpp",
		"/C/Projects/GLMario/GLMario/source/IDrawer.h",
		"/C/Projects/GLMario/GLMario/source/helper.cpp",
		"/C/Projects/GLMario/GLMario/source/helper.h",
		"/C/Projects/GLMario/GLMario/source/camera.h",
		"/C/Projects/GLMario/GLMario/source/helper.cp",
		"/C/Projects/GLMario/GLMario/source/IDrawer",
		"/C/Projects/GLMario/GLMario/source/player.h",
		"/C/Projects/GLMario/GLMario/source/scene_manager.h",
		"/C/Projects/GLMario/GLMario/source/main.cpp",
		"/C/Projects/GLMario/GLMario/source/renderer.cpp",
		"/C/Projects/GLMario/GLMario/source/scene_manager.cpp",
		"/C/Projects/GLMario/GLMario/source/dynamic_array.h",
		"/C/Projects/GLMario/GLMario/source/renderer.h",
		"/C/Projects/GLMario/GLMario/source/game_object.h",
		"/C/Projects/GLMario/GLMario/source/dyn_array.h",
		"/C/Projects/GLMario/GLMario/source/input.h",
		"/C/Projects/GLMario/GLMario/source/window.cpp",
		"/C/Projects/GLMario/GLMario/source/input.cpp",
		"/C/Projects/GLMario/GLMario/source/window.h",
		"/C/Projects/GLMario/GLMario/source/message_pump.h",
		"/C/Projects/GLMario/GLMario/source/message_pump.cpp",
		"/C/Projects/enGen/res/Shaders/standard_frag.glsl",
		"/C/Projects/enGen/enGen/src/shader_manager.cpp",
		"/C/Projects/enGen/enGen/src/main.cpp",
		"/C/Projects/enGen/enGen/src/renderer.cpp",
		"/C/Projects/enGen/Sublime/build.bat",
		"/C/Projects/enGen/enGen/src/camera.cpp",
		"/C/Projects/enGen/enGen/src/shader_manager.h",
		"/C/Projects/enGen/enGen/src/player.h",
		"/C/Projects/enGen/enGen/src/renderer.h",
		"/C/Projects/enGen/enGen/src/camera.h",
		"/C/Projects/enGen/enGen/src/user_interface.h",
		"/C/Projects/enGen/enGen/src/game.h",
		"/C/Projects/enGen/enGen/src/core.h",
		"/C/Projects/enGen/enGen/src/input.h",
		"/C/Projects/enGen/enGen/src/core.cpp",
		"/C/Projects/enGen/Sublime/sproj.sublime-project",
		"/C/Projects/enGen/res/vs1.glsl",
		"/C/Projects/enGen/res/Shaders/vs1.glsl",
		"/C/Projects/enGen/enGen/src/enemy.h",
		"/C/Users/Genova/AppData/Roaming/Sublime Text 3/Packages/Default/Default (Windows).sublime-keymap",
		"/C/Users/Genova/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
		"/C/Projects/enGen/res/Shaders/standard_vert.glsl",
		"/C/Projects/enGen/res/fs1.glsl",
		"/C/Projects/RavenEngine/RavenEngine/RavenEngine/Shaders/Vertex_Shader.glsl",
		"/C/Projects/enGen/OpenGL_Base/src/helper.h",
		"/C/Projects/enGen/OpenGL_Base/src/helper.cpp",
		"/C/Projects/enGen/OpenGL_Base/src/renderer.cpp",
		"/C/Projects/enGen/OpenGL_Base/src/main.cpp",
		"/C/Projects/enGen/OpenGL_Base/src/renderer.h",
		"/C/Projects/enGen/OpenGL_Base/renderer.cpp",
		"/C/Projects/enGen/OpenGL_Base/src/camera.cpp",
		"/C/Users/Genova/AppData/Roaming/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/C/Projects/OpenGL_Base/OpenGL_Base/src/main.cpp",
		"/C/Projects/OpenGL_Base/OpenGL_Base/hdrs/player.h",
		"/C/Projects/OpenGL_Base/Sublime/sproj.sublime-project",
		"/C/Users/Genova/Documents/Visual Studio 2013/Projects/OpenGL_Base/OpenGL_Base/hdrs/resource_loader.h",
		"/C/Users/Genova/Documents/Visual Studio 2013/Projects/OpenGL_Base/OpenGL_Base/src/resource_loader.cpp",
		"/C/Projects/OpenGL_Base/OpenGL_Base/hdrs/game.h",
		"/C/Projects/OpenGL_Base/OpenGL_Base/src/user_interface.cpp",
		"/C/Projects/OpenGL_Base/OpenGL_Base/hdrs/core.h",
		"/C/Projects/OpenGL_Base/OpenGL_Base/src/core.cpp",
		"/C/Projects/OpenGL_Base/OpenGL_Base/hdrs/user_interface.h",
		"/C/Projects/OpenGL_Base/OpenGL_Base/src/game.cpp",
		"/C/Projects/OpenGL_Base/OpenGL_Base/src/player.cpp",
		"/C/Projects/OpenGL_Base/Sublime/build.bat",
		"/C/Projects/OpenGL_Base/OpenGL_Base/src/UserInterface.cpp",
		"/C/Users/Genova/Documents/Visual Studio 2013/Projects/OpenGL_Base/OpenGL_Base/src/main.cpp",
		"/C/Users/Genova/Documents/Visual Studio 2013/Projects/OpenGL_Base/Sublime/build.bat",
		"/C/Users/Genova/Documents/Visual Studio 2013/Projects/OpenGL_Base/Sublime/sproj.sublime-project",
		"/C/Users/Genova/Documents/Visual Studio 2013/Projects/OpenGL_Base/OpenGL_Base/game_object.cpp",
		"/C/Users/Genova/Documents/Visual Studio 2013/Projects/OpenGL_Base/OpenGL_Base/test.cpp",
		"/C/Users/Genova/Documents/Visual Studio 2013/Projects/OpenGL_Base/OpenGL_Base/OpenGL_Base.vcxproj",
		"/C/Users/Genova/Documents/Visual Studio 2013/Projects/OpenGL_Base/OpenGL_Base.opensdf",
		"/C/Users/Genova/Documents/Visual Studio 2013/Projects/OpenGL_Base/OpenGL_Base.sln",
		"/C/Users/Genova/Documents/Visual Studio 2013/Projects/OpenGL_Base/Debug/OpenGL_Base.ilk",
		"/C/Users/Genova/Documents/Visual Studio 2013/Projects/OpenGL_Base/OpenGL_Base/OpenGL_Base.vcxproj.filters",
		"/C/Users/Genova/Documents/Python/Test/Builder.py",
		"/C/Users/Genova/Documents/Python/Test/main.py",
		"/C/Users/Genova/Documents/Code Blocks Projects/CS436Proj2/Network Simulator/simulation_functions.cpp",
		"/C/Users/Genova/Documents/Code Blocks Projects/Homework5/page_table_entry.cpp",
		"/C/Users/Genova/Documents/Code Blocks Projects/Homework5/page_table.cpp",
		"/C/Users/Genova/Documents/Code Blocks Projects/Homework5/page_table_entry.h",
		"/C/Users/Genova/Documents/Code Blocks Projects/Homework5/page_table.h",
		"/C/Users/Genova/Documents/Code Blocks Projects/Homework5/Makefile",
		"/C/Users/Genova/Documents/Code Blocks Projects/Homework5/main.cpp",
		"/C/Users/Genova/Documents/Code Blocks Projects/CS 433 HW/Homework 1/src/main.cpp",
		"/C/Users/Genova/Documents/Code Blocks Projects/SFMLEngine/SFMLEngine/main.cpp"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"orthographic",
			"draw_call",
			"bot",
			"Searching",
			"Transform",
			"window",
			"create",
			"clear",
			"input",
			"projection",
			"f",
			"n",
			"default_camera",
			"default",
			"view_matrix",
			"camera",
			"_rec",
			"destroy",
			"add(",
			"result",
			"shader",
			"end",
			"ShaderFiles",
			"texture_locations",
			"result",
			"draw_window",
			"glClearColor",
			"Renderer",
			");",
			"int",
			"for",
			" ==",
			"mouse",
			"MouseButton::",
			"button",
			"mouse",
			"button",
			"mouse",
			"update_mouse",
			".right",
			"i",
			"KeyState.",
			"FRAME_UP",
			"left",
			"right",
			"left",
			"->",
			"(->",
			" ->",
			"game_state",
			"win",
			"enGen",
			"GL_CLEAR",
			"Result",
			"zNear",
			"zFar",
			"Camera",
			"struct GameState",
			"class GameState",
			"Camera",
			"Camera3",
			"renderer::",
			"ShaderManager",
			"input.h",
			"keystate",
			"\"core.h\"",
			"DrawCommand",
			"core.h",
			"mouse_moved",
			"down",
			"flipped_normals",
			"vNormal",
			"ren",
			"createshader",
			"buffer",
			"buildshader",
			"createShader",
			"buildshaderprogram",
			"shader",
			"main",
			"theme",
			"__LINE__",
			"	\n",
			"logSDLEr",
			"{\n",
			"tab",
			"window",
			"side_bar",
			"ignored",
			"#",
			"true",
			"quit",
			"x",
			"texture",
			"a",
			"return",
			"shell_cmd",
			"make",
			"shell_cmd",
			"build",
			"			\n",
			"LRU",
			"page_size",
			"todo",
			"simluaton",
			"todo",
			"Algorithm",
			"algorithm",
			"Algorithm",
			"preTime",
			"postTime",
			"preTime",
			"postTime",
			"elapsedTime",
			"information",
			"line",
			"Size:",
			"lru_queue.push",
			"lru_queue",
			"full_pages.erase",
			"unsigned",
			"unsign",
			"unsigne",
			"unsigned",
			"PageTable",
			"to_return",
			"run_simul",
			"run_simulation"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"draw_call",
			"_rect",
			"mouse.buttons",
			"(int32)MouseButton::",
			"buttons",
			"mouse.button",
			"[MouseButton::RIGHT]",
			"KeyState::",
			"",
			"::",
			"free_victim",
			"input"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/C/Projects/GLMario/glmario/source/main.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2058,
						"regions":
						{
						},
						"selection":
						[
							[
								1791,
								1791
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 324.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/C/Projects/GLMario/glmario/source/renderer.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9616,
						"regions":
						{
						},
						"selection":
						[
							[
								7830,
								7830
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 3004.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/C/Projects/GLMario/glmario/source/player.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1916,
						"regions":
						{
						},
						"selection":
						[
							[
								1410,
								1410
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 513.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/C/Projects/GLMario/glmario/source/tilemap.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1455,
						"regions":
						{
						},
						"selection":
						[
							[
								1156,
								1156
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 303.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/C/Projects/GLMario/res/default_vert.glsl",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 350,
						"regions":
						{
						},
						"selection":
						[
							[
								306,
								306
							]
						],
						"settings":
						{
							"syntax": "Packages/OpenGL Shading Language (GLSL)/GLSL.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/C/Projects/GLMario/glmario/source/camera.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1023,
						"regions":
						{
						},
						"selection":
						[
							[
								692,
								692
							]
						],
						"settings":
						{
							"history_list_is_closing": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 518.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 6,
					"file": "/C/Projects/GLMario/glmario/source/renderer.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2658,
						"regions":
						{
						},
						"selection":
						[
							[
								1215,
								1215
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/C/Projects/GLMario/glmario/source/mathops.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11787,
						"regions":
						{
						},
						"selection":
						[
							[
								11552,
								11552
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7144.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/C/Projects/GLMario/glmario/source/camera.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 520,
						"regions":
						{
						},
						"selection":
						[
							[
								138,
								138
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 334.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "MSVC",
	"project": "glmario.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"mathops.cpp",
				"source\\mathops.cpp"
			],
			[
				"player.cpp",
				"source\\player.cpp"
			],
			[
				"ca",
				"source\\camera.h"
			],
			[
				"camera.cpp",
				"source\\camera.cpp"
			],
			[
				"renderer.h",
				"source\\renderer.h"
			],
			[
				"renderer.cpp",
				"source\\renderer.cpp"
			],
			[
				"glsl",
				"res\\default_vert.glsl"
			],
			[
				"tilemap.cpp",
				"source\\tilemap.cpp"
			],
			[
				"camera.cp",
				"source\\camera.cpp"
			],
			[
				"sceme",
				"source\\scene_manager.cpp"
			],
			[
				"main.cpp",
				"source\\main.cpp"
			],
			[
				"camera.h",
				"source\\camera.h"
			],
			[
				"scene_manager.cpp",
				"source\\scene_manager.cpp"
			],
			[
				"window.cpp",
				"source\\window.cpp"
			],
			[
				"window.h",
				"source\\window.h"
			],
			[
				"scenem",
				"source\\scene_manager.h"
			],
			[
				"scene",
				"source\\scene_manager.h"
			],
			[
				"sce",
				"source\\scene_manager.h"
			],
			[
				"idrawer.h",
				"source\\IDrawer.h"
			],
			[
				"tilemap.h",
				"source\\tilemap.h"
			],
			[
				"scne",
				"source\\scene_manager.cpp"
			],
			[
				"main.cp",
				"source\\main.cpp"
			],
			[
				"rende",
				"source\\renderer.cpp"
			],
			[
				"renderer.",
				"source\\renderer.h"
			],
			[
				"iwindow",
				"source\\IWindowListener.cpp"
			],
			[
				"scene_man",
				"source\\scene_manager.cpp"
			],
			[
				"scene_manager.h",
				"source\\scene_manager.h"
			],
			[
				"player.h",
				"source\\player.h"
			],
			[
				"input.cpp",
				"source\\input.cpp"
			],
			[
				"input.h",
				"source\\input.h"
			],
			[
				"mathops.h",
				"source\\mathops.h"
			],
			[
				"palyerc",
				"source\\player.cpp"
			],
			[
				"play",
				"source\\player.h"
			],
			[
				"build.bat",
				"Sublime\\build.bat"
			],
			[
				"helper.h",
				"source\\helper.h"
			],
			[
				"rendere",
				"source\\renderer.cpp"
			],
			[
				"frag",
				"res\\default_frag.glsl"
			],
			[
				"render",
				"source\\renderer.h"
			],
			[
				"types.h",
				"source\\types.h"
			],
			[
				"renderer",
				"C:\\Projects\\GLMario\\glmario\\source\\renderer.cpp"
			],
			[
				"plyaer.cpp",
				"C:\\Projects\\GLMario\\glmario\\source\\player.cpp"
			],
			[
				"",
				"scene_manager.cpp"
			],
			[
				"playercp",
				"player.cpp"
			],
			[
				"game",
				"game_object.h"
			],
			[
				"s",
				"scene_manager.h"
			],
			[
				"idra",
				"IDrawer.h"
			],
			[
				"dynami",
				"dynamic_array.h"
			],
			[
				"scene_manager",
				"scene_manager.cpp"
			],
			[
				"idrawer",
				"IDrawer.h"
			],
			[
				"helper.cpp",
				"helper.cpp"
			],
			[
				"sc",
				"scene_manager.h"
			],
			[
				"plyaer.h",
				"player.h"
			],
			[
				"rend",
				"renderer.cpp"
			],
			[
				"ren",
				"renderer.cpp"
			],
			[
				"ply",
				"player.cpp"
			],
			[
				"idraw",
				"IDrawer.h"
			],
			[
				"ame",
				"game_object.h"
			],
			[
				"renh",
				"renderer.h"
			],
			[
				"playh",
				"player.h"
			],
			[
				"plyaer.",
				"player.cpp"
			],
			[
				"main",
				"main.cpp"
			],
			[
				"plya",
				"player.cpp"
			],
			[
				"dyn",
				"dynamic_array.h"
			],
			[
				"game_object.h",
				"game_object.h"
			],
			[
				"main.",
				"main.cpp"
			],
			[
				"window",
				"window.cpp"
			],
			[
				"inptu.h",
				"input.h"
			],
			[
				"user_interface.h",
				"res\\enGen\\src\\user_interface.h"
			],
			[
				"game.h",
				"enGen\\src\\game.h"
			],
			[
				"user_in",
				"enGen\\src\\user_interface.h"
			],
			[
				"shader",
				"res\\res\\Shaders\\standard_frag.glsl"
			],
			[
				"core.h",
				"res\\enGen\\src\\core.h"
			],
			[
				"enemy.h",
				"enGen\\src\\enemy.h"
			],
			[
				"core.cpp",
				"enGen\\src\\core.cpp"
			],
			[
				"buil",
				"res\\Sublime\\build.bat"
			],
			[
				"build",
				"res\\Sublime\\build.bat"
			],
			[
				"vs1",
				"res\\res\\Shaders\\vs1.glsl"
			],
			[
				"core",
				"enGen\\src\\core.h"
			],
			[
				"stand",
				"res\\res\\Shaders\\standard_frag.glsl"
			],
			[
				"standard",
				"res\\res\\Shaders\\standard_vert.glsl"
			],
			[
				"standar",
				"res\\res\\Shaders\\standard_frag.glsl"
			],
			[
				"fs1",
				"res\\res\\fs1.glsl"
			],
			[
				"sublime",
				"Sublime Settings\\sproj.sublime-project"
			],
			[
				"prefer",
				"C:\\Users\\Genova\\AppData\\Roaming\\Sublime Text 3\\Packages\\User\\Preferences.sublime-settings"
			],
			[
				"palyer",
				"OpenGL_Base\\hdrs\\player.h"
			],
			[
				"game.cpp",
				"OpenGL_Base\\src\\game.cpp"
			],
			[
				"reso",
				"OpenGL_Base\\src\\resource_loader.cpp"
			],
			[
				"resource_lo",
				"OpenGL_Base\\hdrs\\resource_loader.h"
			],
			[
				"kd",
				"kdflkajsdfkjjdkfjasidfa;lkjeid;lkajsiclkvjaie;okja"
			],
			[
				"page",
				"C:\\Users\\Genova\\Documents\\Code Blocks Projects\\Homework5\\page_table.cpp"
			],
			[
				"make",
				"C:\\Users\\Genova\\Documents\\Code Blocks Projects\\Homework5\\Makefile"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 226.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
